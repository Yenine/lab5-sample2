Terminals unused in grammar

   T_STRING
   IF
   ELSE
   FOR
   RET
   BOOL
   LOP_EQ


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | statements fundef

    5 fundef: T IDENTIFIER LP RP block

    6 block: LC statements RC

    7 statement: SEMICOLON
    8          | declaration SEMICOLON
    9          | assignment SEMICOLON
   10          | WHILE block

   11 assignment: IDENTIFIER LOP_ASSIGN expr

   12 declaration: T idlist

   13 idlist: idlist COMMA IDENTIFIER
   14       | idlist COMMA IDENTIFIER LOP_ASSIGN expr
   15       | IDENTIFIER
   16       | IDENTIFIER LOP_ASSIGN expr

   17 expr: IDENTIFIER
   18     | INTEGER
   19     | CHAR
   20     | STRING

   21 T: T_INT
   22  | T_CHAR
   23  | T_BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 22
T_INT (259) 21
T_STRING (260)
T_BOOL (261) 23
LOP_ASSIGN (262) 11 14 16
SEMICOLON (263) 7 8 9
COMMA (264) 13 14
WHILE (265) 10
IF (266)
ELSE (267)
FOR (268)
RET (269)
LP (270) 5
RP (271) 5
LC (272) 6
RC (273) 6
IDENTIFIER (274) 5 11 13 14 15 16 17
INTEGER (275) 18
CHAR (276) 19
BOOL (277)
STRING (278) 20
LOP_EQ (279)


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
program (26)
    on left: 1, on right: 0
statements (27)
    on left: 2 3 4, on right: 1 3 4 6
fundef (28)
    on left: 5, on right: 4
block (29)
    on left: 6, on right: 5 10
statement (30)
    on left: 7 8 9 10, on right: 2 3
assignment (31)
    on left: 11, on right: 9
declaration (32)
    on left: 12, on right: 8
idlist (33)
    on left: 13 14 15 16, on right: 12 13 14
expr (34)
    on left: 17 18 19 20, on right: 11 14 16
T (35)
    on left: 21 22 23, on right: 5 12


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    SEMICOLON   shift, and go to state 4
    WHILE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    program      go to state 7
    statements   go to state 8
    statement    go to state 9
    assignment   go to state 10
    declaration  go to state 11
    T            go to state 12


State 1

   22 T: T_CHAR .

    $default  reduce using rule 22 (T)


State 2

   21 T: T_INT .

    $default  reduce using rule 21 (T)


State 3

   23 T: T_BOOL .

    $default  reduce using rule 23 (T)


State 4

    7 statement: SEMICOLON .

    $default  reduce using rule 7 (statement)


State 5

   10 statement: WHILE . block

    LC  shift, and go to state 13

    block  go to state 14


State 6

   11 assignment: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 15


State 7

    0 $accept: program . $end

    $end  shift, and go to state 16


State 8

    1 program: statements .
    3 statements: statements . statement
    4           | statements . fundef

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    SEMICOLON   shift, and go to state 4
    WHILE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 1 (program)

    fundef       go to state 17
    statement    go to state 18
    assignment   go to state 10
    declaration  go to state 11
    T            go to state 19


State 9

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 10

    9 statement: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 20


State 11

    8 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 21


State 12

   12 declaration: T . idlist

    IDENTIFIER  shift, and go to state 22

    idlist  go to state 23


State 13

    6 block: LC . statements RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    SEMICOLON   shift, and go to state 4
    WHILE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    statements   go to state 24
    statement    go to state 9
    assignment   go to state 10
    declaration  go to state 11
    T            go to state 12


State 14

   10 statement: WHILE block .

    $default  reduce using rule 10 (statement)


State 15

   11 assignment: IDENTIFIER LOP_ASSIGN . expr

    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28

    expr  go to state 29


State 16

    0 $accept: program $end .

    $default  accept


State 17

    4 statements: statements fundef .

    $default  reduce using rule 4 (statements)


State 18

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 19

    5 fundef: T . IDENTIFIER LP RP block
   12 declaration: T . idlist

    IDENTIFIER  shift, and go to state 30

    idlist  go to state 23


State 20

    9 statement: assignment SEMICOLON .

    $default  reduce using rule 9 (statement)


State 21

    8 statement: declaration SEMICOLON .

    $default  reduce using rule 8 (statement)


State 22

   15 idlist: IDENTIFIER .
   16       | IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 31

    $default  reduce using rule 15 (idlist)


State 23

   12 declaration: T idlist .
   13 idlist: idlist . COMMA IDENTIFIER
   14       | idlist . COMMA IDENTIFIER LOP_ASSIGN expr

    COMMA  shift, and go to state 32

    $default  reduce using rule 12 (declaration)


State 24

    3 statements: statements . statement
    4           | statements . fundef
    6 block: LC statements . RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    SEMICOLON   shift, and go to state 4
    WHILE       shift, and go to state 5
    RC          shift, and go to state 33
    IDENTIFIER  shift, and go to state 6

    fundef       go to state 17
    statement    go to state 18
    assignment   go to state 10
    declaration  go to state 11
    T            go to state 19


State 25

   17 expr: IDENTIFIER .

    $default  reduce using rule 17 (expr)


State 26

   18 expr: INTEGER .

    $default  reduce using rule 18 (expr)


State 27

   19 expr: CHAR .

    $default  reduce using rule 19 (expr)


State 28

   20 expr: STRING .

    $default  reduce using rule 20 (expr)


State 29

   11 assignment: IDENTIFIER LOP_ASSIGN expr .

    $default  reduce using rule 11 (assignment)


State 30

    5 fundef: T IDENTIFIER . LP RP block
   15 idlist: IDENTIFIER .
   16       | IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 31
    LP          shift, and go to state 34

    $default  reduce using rule 15 (idlist)


State 31

   16 idlist: IDENTIFIER LOP_ASSIGN . expr

    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28

    expr  go to state 35


State 32

   13 idlist: idlist COMMA . IDENTIFIER
   14       | idlist COMMA . IDENTIFIER LOP_ASSIGN expr

    IDENTIFIER  shift, and go to state 36


State 33

    6 block: LC statements RC .

    $default  reduce using rule 6 (block)


State 34

    5 fundef: T IDENTIFIER LP . RP block

    RP  shift, and go to state 37


State 35

   16 idlist: IDENTIFIER LOP_ASSIGN expr .

    $default  reduce using rule 16 (idlist)


State 36

   13 idlist: idlist COMMA IDENTIFIER .
   14       | idlist COMMA IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 38

    $default  reduce using rule 13 (idlist)


State 37

    5 fundef: T IDENTIFIER LP RP . block

    LC  shift, and go to state 13

    block  go to state 39


State 38

   14 idlist: idlist COMMA IDENTIFIER LOP_ASSIGN . expr

    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28

    expr  go to state 40


State 39

    5 fundef: T IDENTIFIER LP RP block .

    $default  reduce using rule 5 (fundef)


State 40

   14 idlist: idlist COMMA IDENTIFIER LOP_ASSIGN expr .

    $default  reduce using rule 14 (idlist)
