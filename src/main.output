Terminals unused in grammar

   T_STRING
   WHILE
   FOR
   RET
   BOOL
   LOP_EQ


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | statements fundef
    5           | statements if
    6           | statements if else

    7 if: IF LP expr RP block
    8   | IF LP expr RP statement

    9 else: ELSE block
   10     | ELSE statement

   11 fundef: T IDENTIFIER LP RP block

   12 block: LC statements RC

   13 statement: SEMICOLON
   14          | declaration SEMICOLON
   15          | assignment SEMICOLON

   16 assignment: IDENTIFIER LOP_ASSIGN expr

   17 declaration: T idlist

   18 idlist: idlist COMMA IDENTIFIER
   19       | idlist COMMA IDENTIFIER LOP_ASSIGN expr
   20       | IDENTIFIER
   21       | IDENTIFIER LOP_ASSIGN expr

   22 expr: expr O_AND unit
   23     | expr O_OR unit
   24     | expr O_EQ unit
   25     | expr O_UEQ unit
   26     | expr O_GRE unit
   27     | expr O_LES unit
   28     | expr O_GREEQ unit
   29     | expr O_LESEQ unit
   30     | expr O_ADD unit
   31     | expr O_MINUS unit
   32     | expr O_MUL unit
   33     | expr O_DIV unit
   34     | unit

   35 unit: IDENTIFIER
   36     | INTEGER
   37     | CHAR
   38     | STRING

   39 T: T_INT
   40  | T_CHAR
   41  | T_BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 40
T_INT (259) 39
T_STRING (260)
T_BOOL (261) 41
LOP_ASSIGN (262) 16 19 21
O_ADD (263) 30
O_MINUS (264) 31
O_MUL (265) 32
O_DIV (266) 33
O_EQ (267) 24
O_UEQ (268) 25
O_GRE (269) 26
O_LES (270) 27
O_GREEQ (271) 28
O_LESEQ (272) 29
O_AND (273) 22
O_OR (274) 23
SEMICOLON (275) 13 14 15
COMMA (276) 18 19
WHILE (277)
IF (278) 7 8
ELSE (279) 9 10
FOR (280)
RET (281)
LP (282) 7 8 11
RP (283) 7 8 11
LC (284) 12
RC (285) 12
IDENTIFIER (286) 11 16 18 19 20 21 35
INTEGER (287) 36
CHAR (288) 37
BOOL (289)
STRING (290) 38
LOP_EQ (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
statements (39)
    on left: 2 3 4 5 6, on right: 1 3 4 5 6 12
if (40)
    on left: 7 8, on right: 5 6
else (41)
    on left: 9 10, on right: 6
fundef (42)
    on left: 11, on right: 4
block (43)
    on left: 12, on right: 7 9 11
statement (44)
    on left: 13 14 15, on right: 2 3 8 10
assignment (45)
    on left: 16, on right: 15
declaration (46)
    on left: 17, on right: 14
idlist (47)
    on left: 18 19 20 21, on right: 17 18 19
expr (48)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34, on right: 7 8
    16 19 21 22 23 24 25 26 27 28 29 30 31 32 33
unit (49)
    on left: 35 36 37 38, on right: 22 23 24 25 26 27 28 29 30 31 32
    33 34
T (50)
    on left: 39 40 41, on right: 11 17


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    SEMICOLON   shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    program      go to state 6
    statements   go to state 7
    statement    go to state 8
    assignment   go to state 9
    declaration  go to state 10
    T            go to state 11


State 1

   40 T: T_CHAR .

    $default  reduce using rule 40 (T)


State 2

   39 T: T_INT .

    $default  reduce using rule 39 (T)


State 3

   41 T: T_BOOL .

    $default  reduce using rule 41 (T)


State 4

   13 statement: SEMICOLON .

    $default  reduce using rule 13 (statement)


State 5

   16 assignment: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 12


State 6

    0 $accept: program . $end

    $end  shift, and go to state 13


State 7

    1 program: statements .
    3 statements: statements . statement
    4           | statements . fundef
    5           | statements . if
    6           | statements . if else

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    SEMICOLON   shift, and go to state 4
    IF          shift, and go to state 14
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 1 (program)

    if           go to state 15
    fundef       go to state 16
    statement    go to state 17
    assignment   go to state 9
    declaration  go to state 10
    T            go to state 18


State 8

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 9

   15 statement: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 19


State 10

   14 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 20


State 11

   17 declaration: T . idlist

    IDENTIFIER  shift, and go to state 21

    idlist  go to state 22


State 12

   16 assignment: IDENTIFIER LOP_ASSIGN . expr

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 27
    unit  go to state 28


State 13

    0 $accept: program $end .

    $default  accept


State 14

    7 if: IF . LP expr RP block
    8   | IF . LP expr RP statement

    LP  shift, and go to state 29


State 15

    5 statements: statements if .
    6           | statements if . else

    ELSE  shift, and go to state 30

    $default  reduce using rule 5 (statements)

    else  go to state 31


State 16

    4 statements: statements fundef .

    $default  reduce using rule 4 (statements)


State 17

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 18

   11 fundef: T . IDENTIFIER LP RP block
   17 declaration: T . idlist

    IDENTIFIER  shift, and go to state 32

    idlist  go to state 22


State 19

   15 statement: assignment SEMICOLON .

    $default  reduce using rule 15 (statement)


State 20

   14 statement: declaration SEMICOLON .

    $default  reduce using rule 14 (statement)


State 21

   20 idlist: IDENTIFIER .
   21       | IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 33

    $default  reduce using rule 20 (idlist)


State 22

   17 declaration: T idlist .
   18 idlist: idlist . COMMA IDENTIFIER
   19       | idlist . COMMA IDENTIFIER LOP_ASSIGN expr

    COMMA  shift, and go to state 34

    $default  reduce using rule 17 (declaration)


State 23

   35 unit: IDENTIFIER .

    $default  reduce using rule 35 (unit)


State 24

   36 unit: INTEGER .

    $default  reduce using rule 36 (unit)


State 25

   37 unit: CHAR .

    $default  reduce using rule 37 (unit)


State 26

   38 unit: STRING .

    $default  reduce using rule 38 (unit)


State 27

   16 assignment: IDENTIFIER LOP_ASSIGN expr .
   22 expr: expr . O_AND unit
   23     | expr . O_OR unit
   24     | expr . O_EQ unit
   25     | expr . O_UEQ unit
   26     | expr . O_GRE unit
   27     | expr . O_LES unit
   28     | expr . O_GREEQ unit
   29     | expr . O_LESEQ unit
   30     | expr . O_ADD unit
   31     | expr . O_MINUS unit
   32     | expr . O_MUL unit
   33     | expr . O_DIV unit

    O_ADD    shift, and go to state 35
    O_MINUS  shift, and go to state 36
    O_MUL    shift, and go to state 37
    O_DIV    shift, and go to state 38
    O_EQ     shift, and go to state 39
    O_UEQ    shift, and go to state 40
    O_GRE    shift, and go to state 41
    O_LES    shift, and go to state 42
    O_GREEQ  shift, and go to state 43
    O_LESEQ  shift, and go to state 44
    O_AND    shift, and go to state 45
    O_OR     shift, and go to state 46

    $default  reduce using rule 16 (assignment)


State 28

   34 expr: unit .

    $default  reduce using rule 34 (expr)


State 29

    7 if: IF LP . expr RP block
    8   | IF LP . expr RP statement

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 47
    unit  go to state 28


State 30

    9 else: ELSE . block
   10     | ELSE . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    SEMICOLON   shift, and go to state 4
    LC          shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    block        go to state 49
    statement    go to state 50
    assignment   go to state 9
    declaration  go to state 10
    T            go to state 11


State 31

    6 statements: statements if else .

    $default  reduce using rule 6 (statements)


State 32

   11 fundef: T IDENTIFIER . LP RP block
   20 idlist: IDENTIFIER .
   21       | IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 33
    LP          shift, and go to state 51

    $default  reduce using rule 20 (idlist)


State 33

   21 idlist: IDENTIFIER LOP_ASSIGN . expr

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 52
    unit  go to state 28


State 34

   18 idlist: idlist COMMA . IDENTIFIER
   19       | idlist COMMA . IDENTIFIER LOP_ASSIGN expr

    IDENTIFIER  shift, and go to state 53


State 35

   30 expr: expr O_ADD . unit

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    unit  go to state 54


State 36

   31 expr: expr O_MINUS . unit

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    unit  go to state 55


State 37

   32 expr: expr O_MUL . unit

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    unit  go to state 56


State 38

   33 expr: expr O_DIV . unit

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    unit  go to state 57


State 39

   24 expr: expr O_EQ . unit

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    unit  go to state 58


State 40

   25 expr: expr O_UEQ . unit

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    unit  go to state 59


State 41

   26 expr: expr O_GRE . unit

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    unit  go to state 60


State 42

   27 expr: expr O_LES . unit

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    unit  go to state 61


State 43

   28 expr: expr O_GREEQ . unit

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    unit  go to state 62


State 44

   29 expr: expr O_LESEQ . unit

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    unit  go to state 63


State 45

   22 expr: expr O_AND . unit

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    unit  go to state 64


State 46

   23 expr: expr O_OR . unit

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    unit  go to state 65


State 47

    7 if: IF LP expr . RP block
    8   | IF LP expr . RP statement
   22 expr: expr . O_AND unit
   23     | expr . O_OR unit
   24     | expr . O_EQ unit
   25     | expr . O_UEQ unit
   26     | expr . O_GRE unit
   27     | expr . O_LES unit
   28     | expr . O_GREEQ unit
   29     | expr . O_LESEQ unit
   30     | expr . O_ADD unit
   31     | expr . O_MINUS unit
   32     | expr . O_MUL unit
   33     | expr . O_DIV unit

    O_ADD    shift, and go to state 35
    O_MINUS  shift, and go to state 36
    O_MUL    shift, and go to state 37
    O_DIV    shift, and go to state 38
    O_EQ     shift, and go to state 39
    O_UEQ    shift, and go to state 40
    O_GRE    shift, and go to state 41
    O_LES    shift, and go to state 42
    O_GREEQ  shift, and go to state 43
    O_LESEQ  shift, and go to state 44
    O_AND    shift, and go to state 45
    O_OR     shift, and go to state 46
    RP       shift, and go to state 66


State 48

   12 block: LC . statements RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    SEMICOLON   shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    statements   go to state 67
    statement    go to state 8
    assignment   go to state 9
    declaration  go to state 10
    T            go to state 11


State 49

    9 else: ELSE block .

    $default  reduce using rule 9 (else)


State 50

   10 else: ELSE statement .

    $default  reduce using rule 10 (else)


State 51

   11 fundef: T IDENTIFIER LP . RP block

    RP  shift, and go to state 68


State 52

   21 idlist: IDENTIFIER LOP_ASSIGN expr .
   22 expr: expr . O_AND unit
   23     | expr . O_OR unit
   24     | expr . O_EQ unit
   25     | expr . O_UEQ unit
   26     | expr . O_GRE unit
   27     | expr . O_LES unit
   28     | expr . O_GREEQ unit
   29     | expr . O_LESEQ unit
   30     | expr . O_ADD unit
   31     | expr . O_MINUS unit
   32     | expr . O_MUL unit
   33     | expr . O_DIV unit

    O_ADD    shift, and go to state 35
    O_MINUS  shift, and go to state 36
    O_MUL    shift, and go to state 37
    O_DIV    shift, and go to state 38
    O_EQ     shift, and go to state 39
    O_UEQ    shift, and go to state 40
    O_GRE    shift, and go to state 41
    O_LES    shift, and go to state 42
    O_GREEQ  shift, and go to state 43
    O_LESEQ  shift, and go to state 44
    O_AND    shift, and go to state 45
    O_OR     shift, and go to state 46

    $default  reduce using rule 21 (idlist)


State 53

   18 idlist: idlist COMMA IDENTIFIER .
   19       | idlist COMMA IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 69

    $default  reduce using rule 18 (idlist)


State 54

   30 expr: expr O_ADD unit .

    $default  reduce using rule 30 (expr)


State 55

   31 expr: expr O_MINUS unit .

    $default  reduce using rule 31 (expr)


State 56

   32 expr: expr O_MUL unit .

    $default  reduce using rule 32 (expr)


State 57

   33 expr: expr O_DIV unit .

    $default  reduce using rule 33 (expr)


State 58

   24 expr: expr O_EQ unit .

    $default  reduce using rule 24 (expr)


State 59

   25 expr: expr O_UEQ unit .

    $default  reduce using rule 25 (expr)


State 60

   26 expr: expr O_GRE unit .

    $default  reduce using rule 26 (expr)


State 61

   27 expr: expr O_LES unit .

    $default  reduce using rule 27 (expr)


State 62

   28 expr: expr O_GREEQ unit .

    $default  reduce using rule 28 (expr)


State 63

   29 expr: expr O_LESEQ unit .

    $default  reduce using rule 29 (expr)


State 64

   22 expr: expr O_AND unit .

    $default  reduce using rule 22 (expr)


State 65

   23 expr: expr O_OR unit .

    $default  reduce using rule 23 (expr)


State 66

    7 if: IF LP expr RP . block
    8   | IF LP expr RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    SEMICOLON   shift, and go to state 4
    LC          shift, and go to state 48
    IDENTIFIER  shift, and go to state 5

    block        go to state 70
    statement    go to state 71
    assignment   go to state 9
    declaration  go to state 10
    T            go to state 11


State 67

    3 statements: statements . statement
    4           | statements . fundef
    5           | statements . if
    6           | statements . if else
   12 block: LC statements . RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    SEMICOLON   shift, and go to state 4
    IF          shift, and go to state 14
    RC          shift, and go to state 72
    IDENTIFIER  shift, and go to state 5

    if           go to state 15
    fundef       go to state 16
    statement    go to state 17
    assignment   go to state 9
    declaration  go to state 10
    T            go to state 18


State 68

   11 fundef: T IDENTIFIER LP RP . block

    LC  shift, and go to state 48

    block  go to state 73


State 69

   19 idlist: idlist COMMA IDENTIFIER LOP_ASSIGN . expr

    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 74
    unit  go to state 28


State 70

    7 if: IF LP expr RP block .

    $default  reduce using rule 7 (if)


State 71

    8 if: IF LP expr RP statement .

    $default  reduce using rule 8 (if)


State 72

   12 block: LC statements RC .

    $default  reduce using rule 12 (block)


State 73

   11 fundef: T IDENTIFIER LP RP block .

    $default  reduce using rule 11 (fundef)


State 74

   19 idlist: idlist COMMA IDENTIFIER LOP_ASSIGN expr .
   22 expr: expr . O_AND unit
   23     | expr . O_OR unit
   24     | expr . O_EQ unit
   25     | expr . O_UEQ unit
   26     | expr . O_GRE unit
   27     | expr . O_LES unit
   28     | expr . O_GREEQ unit
   29     | expr . O_LESEQ unit
   30     | expr . O_ADD unit
   31     | expr . O_MINUS unit
   32     | expr . O_MUL unit
   33     | expr . O_DIV unit

    O_ADD    shift, and go to state 35
    O_MINUS  shift, and go to state 36
    O_MUL    shift, and go to state 37
    O_DIV    shift, and go to state 38
    O_EQ     shift, and go to state 39
    O_UEQ    shift, and go to state 40
    O_GRE    shift, and go to state 41
    O_LES    shift, and go to state 42
    O_GREEQ  shift, and go to state 43
    O_LESEQ  shift, and go to state 44
    O_AND    shift, and go to state 45
    O_OR     shift, and go to state 46

    $default  reduce using rule 19 (idlist)
